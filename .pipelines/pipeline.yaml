pr:
  branches:
    include:
      - master
      - release/*
  paths:
    exclude:
      - ".devcontainer"
      - ".hooks"
      - ".vscode"
      - ".github"
      - docs

trigger:
  branches:
    include:
      - gh-readonly-queue/master/*
  tags:
    include:
      - "*"

resources:
  repositories:
  - repository: templates
    type: git
    name: OneBranch.Pipelines/GovernedTemplates
    ref: refs/heads/master
  
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release-2024-07-10-3

variables:
  WindowsContainerImage: onebranch.azurecr.io/windows/ltsc2019/vse2022:latest # for Windows jobs
  LinuxContainerImage: mcr.microsoft.com/onebranch/cbl-mariner/build:2.0 # for Linux jobs
  NUGET_PLUGIN_HANDSHAKE_TIMEOUT_IN_SECONDS: 40
  NUGET_PLUGIN_REQUEST_TIMEOUT_IN_SECONDS: 300
  NUGET_PLUGIN_IDLE_TIMEOUT_IN_SECONDS: 1200
  mingwurl: 'https://github.com/niXman/mingw-builds-binaries/releases/download/12.1.0-rt_v10-rev3/x86_64-12.1.0-release-posix-seh-rt_v10-rev3.7z'
  ESRP_XSIGN_MAX_PARALLELIZATION: 100
#  Codeql.ADO.Build.Repository.Provider: GitHub
#  Codeql.ADO.Build.SourceVersion: $[ resources.repositories['self'].version ]
#  Codeql.ADO.Build.Repository.Uri: $[ resources.repositories['self'].url ]
#  Codeql.ADO.Build.SourceBranch: $[ resources.repositories['self'].ref ]
#  Codeql.ADO.Build.SourceBranchName: $[ replace(resources.repositories['self'].ref, 'refs/heads/', '') ]

pool:
  type: windows
  isCustom: true
  name: $(BUILD_POOL_NAME_DEFAULT)
#  type: linux
#  isCustom: true
#  name: $(BUILD_POOL_NAME_DEFAULT)
#  demands:
#  - agent.os -equals Linux
#  - Role -equals $(CUSTOM_E2E_ROLE)

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    featureFlags:
      linuxEsrpSigningPreview: true
    globalSdl:
      codeql: # https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/codeql/one-branch-codeql
        compiled:
          enabled: true
      cg:
        failOnAlert: false
      tsa:
        enabled: false
      suppression:
        suppressionFile: \.gdn\.gdnsuppress
        suppressionSet: default
      credscan:
        enabled: true
        suppressionsFileForArtifacts: /.config/CredScanSuppressions.json
    stages:
    - stage: setup
      displayName: ACN
      pool:
        type: windows
        isCustom: true
        name: $$(BUILD_POOL_NAME_DEFAULT)
      jobs:
        - job: env
          displayName: Setup
          steps:
            - script: |
                # To use the variables below, you must make the respective stage's dependsOn have - setup or it will not retain context of this stage
                BUILD_NUMBER=$(Build.BuildNumber)
                echo "##vso[task.setvariable variable=StorageID;isOutput=true]$(echo ${BUILD_NUMBER//./-})"
                echo "##vso[task.setvariable variable=commitID;isOutput=true]$(echo $(make revision)-$(date "+%d%H%M"))"
                echo "##vso[task.setvariable variable=Tag;isOutput=true]$(make version)"
                echo "##vso[task.setvariable variable=npmVersion;isOutput=true]$(make npm-version)"
                cat /etc/os-release
                uname -a
                sudo chown -R $(whoami):$(whoami) .
                go version
                go env
                which go
                echo $PATH
                echo "------"
                echo $(Build.QueuedBy)
                echo $(Build.Reason) # manual, PR, IndividualCI
                echo $(Build.SourceBranch)
              name: "EnvironmentalVariables"
              displayName: "Set environmental variables"
              condition: always()
    - ${{ if contains(variables['Build.SourceBranch'], 'refs/pull') }}:
      - template: template.pipeline.yaml
    - ${{ else }}:
      - template: template.pullrequest.yaml

