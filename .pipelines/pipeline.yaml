pr:
  branches:
    include:
      - master
      - release/*
  paths:
    exclude:
      - ".devcontainer"
      - ".hooks"
      - ".vscode"
      - ".github"
      - docs

trigger:
  branches:
    include:
      - gh-readonly-queue/master/*
  tags:
    include:
      - "*"

variables:
  WindowsContainerImage: onebranch.azurecr.io/windows/ltsc2019/vse2022:latest # for Windows jobs
  LinuxContainerImage: mcr.microsoft.com/onebranch/cbl-mariner/build:2.0 # for Linux jobs
  NUGET_PLUGIN_HANDSHAKE_TIMEOUT_IN_SECONDS: 40
  NUGET_PLUGIN_REQUEST_TIMEOUT_IN_SECONDS: 300
  NUGET_PLUGIN_IDLE_TIMEOUT_IN_SECONDS: 1200
  mingwurl: 'https://github.com/niXman/mingw-builds-binaries/releases/download/12.1.0-rt_v10-rev3/x86_64-12.1.0-release-posix-seh-rt_v10-rev3.7z'
  ESRP_XSIGN_MAX_PARALLELIZATION: 100
#  Codeql.ADO.Build.Repository.Provider: GitHub
#  Codeql.ADO.Build.SourceVersion: $[ resources.repositories['self'].version ]
#  Codeql.ADO.Build.Repository.Uri: $[ resources.repositories['self'].url ]
#  Codeql.ADO.Build.SourceBranch: $[ resources.repositories['self'].ref ]
#  Codeql.ADO.Build.SourceBranchName: $[ replace(resources.repositories['self'].ref, 'refs/heads/', '') ]

#pool:
#  type: windows
#  isCustom: true
#  name: $(BUILD_POOL_NAME_DEFAULT)
#
#  type: linux
#  isCustom: true
#  name: $(BUILD_POOL_NAME_DEFAULT)
#  demands:
#  - agent.os -equals Linux
#  - Role -equals $(CUSTOM_E2E_ROLE)

stages:
- stage: setup
  displayName: ACN
  jobs:
    - job: env
      displayName: Setup
      pool:
        type: windows
        isCustom: true
        name: $(BUILD_POOL_NAME_DEFAULT)
      steps:
        - script: |
            # To use the variables below, you must make the respective stage's dependsOn have - setup or it will not retain context of this stage
            BUILD_NUMBER=$(Build.BuildNumber)
            echo "##vso[task.setvariable variable=StorageID;isOutput=true]$(echo ${BUILD_NUMBER//./-})"
            echo "##vso[task.setvariable variable=commitID;isOutput=true]$(echo $(make revision)-$(date "+%d%H%M"))"
            echo "##vso[task.setvariable variable=Tag;isOutput=true]$(make version)"
            echo "##vso[task.setvariable variable=npmVersion;isOutput=true]$(make npm-version)"
            cat /etc/os-release
            uname -a
            sudo chown -R $(whoami):$(whoami) .
            go version
            go env
            which go
            echo $PATH
            echo "------"
            echo $(Build.QueuedBy)
            echo $(Build.Reason) # manual, PR, IndividualCI
            echo $(Build.SourceBranch)
          name: "EnvironmentalVariables"
          displayName: "Set environmental variables"
          condition: always()
- template: template.unittests.yaml
- template: template.binaries.yaml
- template: template.pipeline.yaml
