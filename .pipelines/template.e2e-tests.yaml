parameters:
- name: suite_name
  type: string

- name: display_name
  type: string

- name: e2e_resources
  type: object
  default:
    cilium:
      e2e_config:
      - name: cilium_linux
        display_name: Cilium
        template: /.pipelines/e2e/cilium/cilium-e2e.jobs.yaml
        params:
          os: linux
      clusters:
      - name: ciliume2e-$(commitID)
        type: singletenant
        params:
          region: $(AKS_CLUSTER_TEST)
          subscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
          create_cmd: swift-byocni-nokubeproxy-up
          vm_size: Standard_B2ms
    cilium_overlay:
      e2e_config:
      - name: cilium_overlay_linux
        display_name: Cilium on AKS Overlay
        template: /.pipelines/e2e/cilium/cilium-e2e.jobs.yaml
        params:
          os: linux
      clusters:
      - name: ciliumovere2e-$(commitID)
        type: singletenant
        params:
          region: $(AKS_CLUSTER_TEST)
          subscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
          create_cmd: overlay-byocni-nokubeproxy-up
          vm_size: Standard_B2ms
    cilium_overlay_dualstack:
      e2e_config:
      - name: cilium_overlay_dualstack_linux
        display_name: Cilium on AKS DualStack Overlay
        template: /.pipelines/e2e/cilium/cilium-e2e.jobs.yaml
        params:
          os: linux
      clusters:
      - name: cildsovere2e-$(commitID)
        type: singletenant
        params:
          region: $(AKS_CLUSTER_TEST)
          subscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
          create_cmd: dualstack-overlay-byocni-nokubeproxy-up
          vm_size: Standard_B2ms
        
          
stages:
- stage: e2e_${{ parameters.suite_name }}
  displayName: Run ${{ parameters.display_name }} E2E Tests
  dependsOn:
    - setup
#    - containerize
  variables:
    commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
    TAG: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.Tag'] ]
#    CURRENT_VERSION: $[ stagedependencies.containerize.check_tag.outputs['CurrentTagManifests.currentTagManifests'] ]
    GOPATH: "$(Agent.TempDirectory)/go" # Go workspace path
    GOBIN: "$(GOPATH)/bin" # Go binaries path
    modulePath: "$(GOPATH)/src/github.com/Azure/azure-container-networking"
  jobs:
  - job:
    pool: 
      type: windows
      isCustom: true
      name: $(BUILD_POOL_NAME_DEFAULT)
    steps:
    - bash: echo "Debug..."
    - bash: echo "$JSON"
      env:
        JSON: ${{ convertToJson(parameters.e2e_resources.cilium) }}
    - bash: echo "$JSON" && echo "$NA"
      env:
        NA: ${{ parameters.suite_name }}
        JSON: ${{ convertToJson(parameters['e2e_resources']['${{ parameters.suite_name }}']) }}

  - ${{ each resource in parameters.e2e_resources }}:
    - ${{ if eq(resource.key, parameters.suite_name) }}:
      - ${{ each cluster in resource.value.clusters }}:
        - template: /.pipelines/templates/choose-cluster.jobs.yaml
          parameters:
            cluster_name: ${{ cluster.name }}
            cluster_type: ${{ cluster.type }}
            ${{ if and(ne(cluster.params, ''), gt(length(cluster.params), 0)) }}:
              template_parameters:
                ${{ each param in cluster.value.params }}:
                  ${{ param.key }}: ${{ param.value }}
  
        - ${{ each test in resource.value.e2e_config }}:
          - template: ${{ test.template }}
            ${{ if and(ne(test.params, ''), gt(length(test.params), 0)) }}:
              parameters:
                test_name: ${{ test.name }}
                display_name: ${{ test.display_name }}
                cluster_name: ${{ cluster.name }}
                subscription: ${{ cluster.subscription }}
                depends_on: 
                  - create_${{ cluster.type }}_cluster_${{ cluster.name }}
                ${{ each param in cluster.params }}:
                  ${{ param.key }}: ${{ param.value }}
  
  - ${{ each resource in parameters.e2e_resources }}:
    - ${{ if eq(resource.key, parameters.suite_name) }}:
      - ${{ each cluster in resource.value.clusters }}:
        - template: templates/delete-cluster.yaml
          parameters:
            cluster_name: ${{ cluster.name }}
            subscription: ${{ cluster.subscription }}
            region: ${{ cluster.region }}
