parameters:
- name: cluster_name
  type: string

- name: subscription
  type: string

steps:
- template: /.pipelines/toolset/k8s/install-kubectl.steps.yaml

- bash: |
    go version
    go env
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: "Set up the Go environment"

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{ parameters.subscription }}
    scriptLocation: "inlineScript"
    scriptType: "bash"
    addSpnToEnvironment: true
    inlineScript: |
      set -e
      make -C ./hack/aks set-kubeconf AZCLI=az
      ls -lah
      pwd
      kubectl cluster-info
      kubectl get po -owide -A
      echo "install Cilium ${CILIUM_DUALSTACK_VERSION}"
      export DIR=${CILIUM_DUALSTACK_VERSION%.*}
      echo "installing files from ${DIR}"
      echo "deploy Cilium ConfigMap"
      kubectl apply -f test/integration/manifests/cilium/v${DIR}/cilium-config/cilium-config-dualstack.yaml
      # Passes Cilium image to daemonset and deployment
      kubectl apply -f test/integration/manifests/cilium/v${DIR}/cilium-agent/files
      kubectl apply -f test/integration/manifests/cilium/v${DIR}/cilium-operator/files

      export CILIUM_VERSION_TAG=${CILIUM_DUALSTACK_VERSION}
      export IPV6_HP_BPF_VERSION=$(make ipv6-hp-bpf-version)
      echo "install Cilium ${CILIUM_DUALSTACK_VERSION} onto Overlay Cluster"
      envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY},${IPV6_HP_BPF_VERSION}' < test/integration/manifests/cilium/v${DIR}/cilium-agent/templates/daemonset-dualstack.yaml | kubectl apply -f -
      envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY}' < test/integration/manifests/cilium/v${DIR}/cilium-operator/templates/deployment.yaml | kubectl apply -f -
      kubectl get po -owide -A
  displayName: "Install Cilium on AKS Dualstack Overlay"
  env:
    CLUSTER: ${{ parameters.cluster_name }}

- template: /.pipelines/toolset/cilium/install-cli.steps.yaml

- script: |
    echo "Start Azilium E2E Tests on Overlay Cluster"
    sudo -E env "PATH=$PATH" make test-load \
      SCALE_UP=32 OS_TYPE=linux CNI_TYPE=cilium_dualstack \
      VALIDATE_STATEFILE=true INSTALL_CNS=true INSTALL_OVERLAY=true \
      AZURE_IPAM_VERSION=$(make azure-ipam-version) \
      CNS_VERSION=$(make cns-version) CLEANUP=true
  retryCountOnTaskFailure: 3
  displayName: "Run Azilium E2E on AKS Overlay"

- script: |
    kubectl get pods -A
    echo "Waiting < 2 minutes for cilium to be ready"
    # Ensure Cilium is ready Xm\Xs
    cilium status --wait --wait-duration 2m
  retryCountOnTaskFailure: 3
  displayName: "Cilium Status"

- script: |
    echo "Run Cilium Connectivity Tests"
    cilium status
    cilium connectivity test --connect-timeout 4s --request-timeout 30s --test '!pod-to-pod-encryption,!node-to-node-encryption,!no-unexpected-packet-drops'
  retryCountOnTaskFailure: 3
  displayName: "Run Cilium Connectivity Tests"

- script: |
    set -e
    kubectl get po -owide -A
    cd test/integration/datapath
    echo "Dualstack Overlay Linux datapath IPv6 test"
    go test -count=1 datapath_linux_test.go -timeout 3m -tags connection -run ^TestDatapathLinux$ -tags=connection,integration -isDualStack=true
    echo "Dualstack Overlay Linux datapath IPv4 test"
    go test -count=1 datapath_linux_test.go -timeout 3m -tags connection -run ^TestDatapathLinux$ -tags=connection,integration
  retryCountOnTaskFailure: 3
  displayName: "DualStack Overlay Linux Tests"

- script: |
    echo "validate pod IP assignment and check systemd-networkd restart"
    kubectl get pod -owide -A
    # Deleting echo-external-node deployment until cilium version matches TODO. https://github.com/cilium/cilium-cli/issues/67 is addressing the change.
    # Saves 17 minutes
    kubectl delete deploy -n cilium-test echo-external-node
    cd test/integration/load
    CNI_TYPE=cilium_dualstack go test -timeout 30m -tags load -run ^TestValidateState$
    echo "delete cilium connectivity test resources and re-validate state"
    kubectl delete ns cilium-test
    kubectl get pod -owide -A
    CNI_TYPE=cilium_dualstack go test -timeout 30m -tags load -run ^TestValidateState$
  displayName: "Validate Pods"

- script: |
    echo "Run wireserver and metadata connectivity Tests"
    bash test/network/wireserver_metadata_test.sh
  retryCountOnTaskFailure: 3
  displayName: "Run Wireserver and Metadata Connectivity Tests"

- script: |
    cd hack/scripts
    chmod +x async-delete-test.sh
    ./async-delete-test.sh
    if ! [ -z $(kubectl -n kube-system get ds  azure-cns | grep non-existing) ]; then
      kubectl -n kube-system patch daemonset azure-cns --type json -p='[{"op": "remove", "path": "/spec/template/spec/nodeSelector/non-existing"}]'
    fi
  displayName: "Verify Async Delete when CNS is down"
